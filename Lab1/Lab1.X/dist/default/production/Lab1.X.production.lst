

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jan 21 21:03:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.31
    14                           ; Generated 13/10/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0009                     _PORTE	set	9
   205  0006                     _PORTB	set	6
   206  0005                     _PORTA	set	5
   207  0008                     _PORTD	set	8
   208  0007                     _PORTC	set	7
   209  0006                     _PORTBbits	set	6
   210  0081                     _OPTION_REG	set	129
   211  0095                     _WPUB	set	149
   212  0089                     _TRISE	set	137
   213  0088                     _TRISD	set	136
   214  0087                     _TRISC	set	135
   215  0086                     _TRISB	set	134
   216  0085                     _TRISA	set	133
   217  0189                     _ANSELH	set	393
   218  0188                     _ANSEL	set	392
   219                           
   220                           	psect	cinit
   221  07F8                     start_initialization:	
   222                           ; #config settings
   223                           
   224  07F8                     __initialization:
   225                           
   226                           ; Clear objects allocated to COMMON
   227  07F8  01F5               	clrf	__pbssCOMMON& (0+127)
   228  07F9  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   229  07FA  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   230  07FB  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2F83   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239  0075                     __pbssCOMMON:
   240  0075                     _START:
   241  0075                     	ds	1
   242  0076                     _FLAG2:
   243  0076                     	ds	1
   244  0077                     _FLAG1:
   245  0077                     	ds	1
   246  0078                     _FLAG:
   247  0078                     	ds	1
   248                           
   249                           	psect	cstackCOMMON
   250  0070                     __pcstackCOMMON:
   251  0070                     ?_Setup:
   252  0070                     ??_Setup:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_Lights:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ??_Lights:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_main:	
   262                           ; 1 bytes @ 0x0
   263                           
   264                           
   265                           ; 1 bytes @ 0x0
   266  0070                     	ds	2
   267  0072                     Lights@i:
   268                           
   269                           ; 2 bytes @ 0x2
   270  0072                     	ds	2
   271  0074                     ??_main:
   272                           
   273                           ; 1 bytes @ 0x4
   274  0074                     	ds	1
   275                           
   276                           	psect	maintext
   277  0783                     __pmaintext:	
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 60 in file "Code.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0
   299 ;;      Temps:          1       0       0       0       0
   300 ;;      Totals:         1       0       0       0       0
   301 ;;Total ram usage:        1 bytes
   302 ;; Hardware stack levels required when called:    1
   303 ;; This function calls:
   304 ;;		_Lights
   305 ;;		_Setup
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _main
   313  0783                     _main:
   314  0783                     l701:	
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   317                           
   318                           
   319                           ;Code.c: 61:     Setup();
   320  0783  120A  118A  273C  120A  118A  	fcall	_Setup
   321  0788                     l703:
   322                           
   323                           ;Code.c: 64:         if (PORTBbits.RB0 == 0){
   324  0788  1283               	bcf	3,5	;RP0=0, select bank0
   325  0789  1303               	bcf	3,6	;RP1=0, select bank0
   326  078A  1806               	btfsc	6,0	;volatile
   327  078B  2F8D               	goto	u21
   328  078C  2F8E               	goto	u20
   329  078D                     u21:
   330  078D  2F91               	goto	l707
   331  078E                     u20:
   332  078E                     l705:
   333                           
   334                           ;Code.c: 65:             FLAG = 1;
   335  078E  01F8               	clrf	_FLAG
   336  078F  0AF8               	incf	_FLAG,f
   337                           
   338                           ;Code.c: 66:         }
   339  0790  2F9C               	goto	l713
   340  0791                     l707:
   341                           
   342                           ;Code.c: 68:             if (FLAG == 1){
   343  0791  0378               	decf	_FLAG,w
   344  0792  1D03               	btfss	3,2
   345  0793  2F95               	goto	u31
   346  0794  2F96               	goto	u30
   347  0795                     u31:
   348  0795  2F9C               	goto	l713
   349  0796                     u30:
   350  0796                     l709:
   351                           
   352                           ;Code.c: 69:                 FLAG = 0;
   353  0796  01F8               	clrf	_FLAG
   354  0797                     l711:
   355                           
   356                           ;Code.c: 70:                 Lights();
   357  0797  120A  118A  2754  120A  118A  	fcall	_Lights
   358  079C                     l713:
   359                           
   360                           ;Code.c: 75:         if (PORTBbits.RB1 == 0 && START == 1){
   361  079C  1283               	bcf	3,5	;RP0=0, select bank0
   362  079D  1303               	bcf	3,6	;RP1=0, select bank0
   363  079E  1886               	btfsc	6,1	;volatile
   364  079F  2FA1               	goto	u41
   365  07A0  2FA2               	goto	u40
   366  07A1                     u41:
   367  07A1  2FAA               	goto	l719
   368  07A2                     u40:
   369  07A2                     l715:
   370  07A2  0375               	decf	_START,w
   371  07A3  1D03               	btfss	3,2
   372  07A4  2FA6               	goto	u51
   373  07A5  2FA7               	goto	u50
   374  07A6                     u51:
   375  07A6  2FAA               	goto	l719
   376  07A7                     u50:
   377  07A7                     l717:
   378                           
   379                           ;Code.c: 76:             FLAG1 = 1;
   380  07A7  01F7               	clrf	_FLAG1
   381  07A8  0AF7               	incf	_FLAG1,f
   382                           
   383                           ;Code.c: 77:         }
   384  07A9  2FC9               	goto	l737
   385  07AA                     l719:
   386                           
   387                           ;Code.c: 79:             if (FLAG1 == 1){
   388  07AA  0377               	decf	_FLAG1,w
   389  07AB  1D03               	btfss	3,2
   390  07AC  2FAE               	goto	u61
   391  07AD  2FAF               	goto	u60
   392  07AE                     u61:
   393  07AE  2FC9               	goto	l737
   394  07AF                     u60:
   395  07AF                     l721:
   396                           
   397                           ;Code.c: 80:                 FLAG1 = 0;
   398  07AF  01F7               	clrf	_FLAG1
   399  07B0                     l723:
   400                           
   401                           ;Code.c: 81:                 if (PORTC == 0){
   402  07B0  0807               	movf	7,w	;volatile
   403  07B1  1D03               	btfss	3,2
   404  07B2  2FB4               	goto	u71
   405  07B3  2FB5               	goto	u70
   406  07B4                     u71:
   407  07B4  2FB8               	goto	l727
   408  07B5                     u70:
   409  07B5                     l725:
   410                           
   411                           ;Code.c: 83:                     PORTC = 1;
   412  07B5  3001               	movlw	1
   413  07B6  0087               	movwf	7	;volatile
   414                           
   415                           ;Code.c: 84:                 }
   416  07B7  2FC9               	goto	l737
   417  07B8                     l727:
   418  07B8  3040               	movlw	64
   419  07B9  0607               	xorwf	7,w	;volatile
   420  07BA  1D03               	btfss	3,2
   421  07BB  2FBD               	goto	u81
   422  07BC  2FBE               	goto	u80
   423  07BD                     u81:
   424  07BD  2FC5               	goto	l735
   425  07BE                     u80:
   426  07BE                     l729:
   427                           
   428                           ;Code.c: 87:                     PORTC = PORTC<<1;
   429  07BE  0807               	movf	7,w	;volatile
   430  07BF  00F4               	movwf	??_main
   431  07C0  0774               	addwf	??_main,w
   432  07C1  0087               	movwf	7	;volatile
   433  07C2                     l731:
   434                           
   435                           ;Code.c: 89:                     PORTBbits.RB3 = 1;
   436  07C2  1586               	bsf	6,3	;volatile
   437  07C3                     l733:
   438                           
   439                           ;Code.c: 91:                     START = 0;
   440  07C3  01F5               	clrf	_START
   441                           
   442                           ;Code.c: 92:                 }
   443  07C4  2FC9               	goto	l737
   444  07C5                     l735:
   445                           
   446                           ;Code.c: 94:                     PORTC = PORTC<<1;
   447  07C5  0807               	movf	7,w	;volatile
   448  07C6  00F4               	movwf	??_main
   449  07C7  0774               	addwf	??_main,w
   450  07C8  0087               	movwf	7	;volatile
   451  07C9                     l737:
   452                           
   453                           ;Code.c: 100:         if (PORTBbits.RB2 == 0 && START == 1){
   454  07C9  1906               	btfsc	6,2	;volatile
   455  07CA  2FCC               	goto	u91
   456  07CB  2FCD               	goto	u90
   457  07CC                     u91:
   458  07CC  2FD5               	goto	l743
   459  07CD                     u90:
   460  07CD                     l739:
   461  07CD  0375               	decf	_START,w
   462  07CE  1D03               	btfss	3,2
   463  07CF  2FD1               	goto	u101
   464  07D0  2FD2               	goto	u100
   465  07D1                     u101:
   466  07D1  2FD5               	goto	l743
   467  07D2                     u100:
   468  07D2                     l741:
   469                           
   470                           ;Code.c: 101:             FLAG2 = 1;
   471  07D2  01F6               	clrf	_FLAG2
   472  07D3  0AF6               	incf	_FLAG2,f
   473                           
   474                           ;Code.c: 102:         }
   475  07D4  2F88               	goto	l703
   476  07D5                     l743:
   477                           
   478                           ;Code.c: 104:             if (FLAG2 == 1){
   479  07D5  0376               	decf	_FLAG2,w
   480  07D6  1D03               	btfss	3,2
   481  07D7  2FD9               	goto	u111
   482  07D8  2FDA               	goto	u110
   483  07D9                     u111:
   484  07D9  2F88               	goto	l703
   485  07DA                     u110:
   486  07DA                     l745:
   487                           
   488                           ;Code.c: 105:                 FLAG2 = 0;
   489  07DA  01F6               	clrf	_FLAG2
   490  07DB                     l747:
   491                           
   492                           ;Code.c: 106:                 if (PORTD == 0){
   493  07DB  0808               	movf	8,w	;volatile
   494  07DC  1D03               	btfss	3,2
   495  07DD  2FDF               	goto	u121
   496  07DE  2FE0               	goto	u120
   497  07DF                     u121:
   498  07DF  2FE3               	goto	l751
   499  07E0                     u120:
   500  07E0                     l749:
   501                           
   502                           ;Code.c: 107:                     PORTD = 1;
   503  07E0  3001               	movlw	1
   504  07E1  0088               	movwf	8	;volatile
   505                           
   506                           ;Code.c: 108:                 }
   507  07E2  2F88               	goto	l703
   508  07E3                     l751:
   509  07E3  3040               	movlw	64
   510  07E4  0608               	xorwf	8,w	;volatile
   511  07E5  1D03               	btfss	3,2
   512  07E6  2FE8               	goto	u131
   513  07E7  2FE9               	goto	u130
   514  07E8                     u131:
   515  07E8  2FF0               	goto	l759
   516  07E9                     u130:
   517  07E9                     l753:
   518                           
   519                           ;Code.c: 110:                     PORTD = PORTD<<1;
   520  07E9  0808               	movf	8,w	;volatile
   521  07EA  00F4               	movwf	??_main
   522  07EB  0774               	addwf	??_main,w
   523  07EC  0088               	movwf	8	;volatile
   524  07ED                     l755:
   525                           
   526                           ;Code.c: 111:                     PORTBbits.RB4 = 1;
   527  07ED  1606               	bsf	6,4	;volatile
   528  07EE                     l757:
   529                           
   530                           ;Code.c: 112:                     START = 0;
   531  07EE  01F5               	clrf	_START
   532                           
   533                           ;Code.c: 113:                 }
   534  07EF  2F88               	goto	l703
   535  07F0                     l759:
   536                           
   537                           ;Code.c: 115:                     PORTD = PORTD<<1;
   538  07F0  0808               	movf	8,w	;volatile
   539  07F1  00F4               	movwf	??_main
   540  07F2  0774               	addwf	??_main,w
   541  07F3  0088               	movwf	8	;volatile
   542  07F4  2F88               	goto	l703
   543  07F5  120A  118A  2800   	ljmp	start
   544  07F8                     __end_of_main:
   545                           
   546                           	psect	text1
   547  073C                     __ptext1:	
   548 ;; *************** function _Setup *****************
   549 ;; Defined at:
   550 ;;		line 127 in file "Code.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _Setup
   579  073C                     _Setup:
   580  073C                     l669:	
   581                           ;incstack = 0
   582                           ; Regs used in _Setup: [wreg+status,2]
   583                           
   584                           
   585                           ;Code.c: 128:     PORTA = 0;
   586  073C  1283               	bcf	3,5	;RP0=0, select bank0
   587  073D  1303               	bcf	3,6	;RP1=0, select bank0
   588  073E  0185               	clrf	5	;volatile
   589                           
   590                           ;Code.c: 129:     PORTB = 0;
   591  073F  0186               	clrf	6	;volatile
   592                           
   593                           ;Code.c: 130:     PORTC = 0;
   594  0740  0187               	clrf	7	;volatile
   595                           
   596                           ;Code.c: 131:     PORTD = 0;
   597  0741  0188               	clrf	8	;volatile
   598                           
   599                           ;Code.c: 132:     PORTE = 0;
   600  0742  0189               	clrf	9	;volatile
   601                           
   602                           ;Code.c: 134:     ANSEL = 0;
   603  0743  1683               	bsf	3,5	;RP0=1, select bank3
   604  0744  1703               	bsf	3,6	;RP1=1, select bank3
   605  0745  0188               	clrf	8	;volatile
   606                           
   607                           ;Code.c: 135:     ANSELH = 0;
   608  0746  0189               	clrf	9	;volatile
   609                           
   610                           ;Code.c: 137:     TRISA = 0;
   611  0747  1683               	bsf	3,5	;RP0=1, select bank1
   612  0748  1303               	bcf	3,6	;RP1=0, select bank1
   613  0749  0185               	clrf	5	;volatile
   614  074A                     l671:
   615                           
   616                           ;Code.c: 138:     TRISB = 0b00000111;
   617  074A  3007               	movlw	7
   618  074B  0086               	movwf	6	;volatile
   619  074C                     l673:
   620                           
   621                           ;Code.c: 139:     TRISC = 0;
   622  074C  0187               	clrf	7	;volatile
   623  074D                     l675:
   624                           
   625                           ;Code.c: 140:     TRISD = 0;
   626  074D  0188               	clrf	8	;volatile
   627  074E                     l677:
   628                           
   629                           ;Code.c: 141:     TRISE = 0;
   630  074E  0189               	clrf	9	;volatile
   631                           
   632                           ;Code.c: 143:     WPUB = 0b00000111;
   633  074F  3007               	movlw	7
   634  0750  0095               	movwf	21	;volatile
   635                           
   636                           ;Code.c: 144:     OPTION_REG = 0b01010111;
   637  0751  3057               	movlw	87
   638  0752  0081               	movwf	1	;volatile
   639  0753                     l72:
   640  0753  0008               	return
   641  0754                     __end_of_Setup:
   642                           
   643                           	psect	text2
   644  0754                     __ptext2:	
   645 ;; *************** function _Lights *****************
   646 ;; Defined at:
   647 ;;		line 147 in file "Code.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  i               2    2[COMMON] int 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, btemp+1
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         2       0       0       0       0
   663 ;;      Temps:          2       0       0       0       0
   664 ;;      Totals:         4       0       0       0       0
   665 ;;Total ram usage:        4 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function _Lights
   676  0754                     _Lights:
   677  0754                     l679:	
   678                           ;incstack = 0
   679                           ; Regs used in _Lights: [wreg+status,2+status,0+btemp+1]
   680                           
   681                           
   682                           ;Code.c: 148:     PORTC = 0;
   683  0754  1283               	bcf	3,5	;RP0=0, select bank0
   684  0755  1303               	bcf	3,6	;RP1=0, select bank0
   685  0756  0187               	clrf	7	;volatile
   686                           
   687                           ;Code.c: 149:     PORTD = 0;
   688  0757  0188               	clrf	8	;volatile
   689  0758                     l681:
   690                           
   691                           ;Code.c: 150:     PORTBbits.RB3 = 0;
   692  0758  1186               	bcf	6,3	;volatile
   693  0759                     l683:
   694                           
   695                           ;Code.c: 151:     PORTBbits.RB4 = 0;
   696  0759  1206               	bcf	6,4	;volatile
   697  075A                     l685:
   698                           
   699                           ;Code.c: 152:     PORTE = 1;
   700  075A  3001               	movlw	1
   701  075B  0089               	movwf	9	;volatile
   702  075C                     l687:
   703                           
   704                           ;Code.c: 153:     for(int i = 0; i < 3; i++){
   705  075C  01F2               	clrf	Lights@i
   706  075D  01F3               	clrf	Lights@i+1
   707  075E                     l693:
   708                           
   709                           ;Code.c: 154:         _delay((unsigned long)((50)*(8000000/4000.0)));
   710  075E  3082               	movlw	130
   711  075F  00F1               	movwf	??_Lights+1
   712  0760  30DD               	movlw	221
   713  0761  00F0               	movwf	??_Lights
   714  0762                     u147:
   715  0762  0BF0               	decfsz	??_Lights,f
   716  0763  2F62               	goto	u147
   717  0764  0BF1               	decfsz	??_Lights+1,f
   718  0765  2F62               	goto	u147
   719  0766  2F67               	nop2
   720  0767                     l695:
   721                           
   722                           ;Code.c: 155:         PORTE = PORTE<<1;
   723  0767  1283               	bcf	3,5	;RP0=0, select bank0
   724  0768  1303               	bcf	3,6	;RP1=0, select bank0
   725  0769  0809               	movf	9,w	;volatile
   726  076A  00F0               	movwf	??_Lights
   727  076B  0770               	addwf	??_Lights,w
   728  076C  0089               	movwf	9	;volatile
   729  076D                     l697:
   730                           
   731                           ;Code.c: 156:     }
   732  076D  3001               	movlw	1
   733  076E  07F2               	addwf	Lights@i,f
   734  076F  1803               	skipnc
   735  0770  0AF3               	incf	Lights@i+1,f
   736  0771  3000               	movlw	0
   737  0772  07F3               	addwf	Lights@i+1,f
   738  0773                     l699:
   739  0773  0873               	movf	Lights@i+1,w
   740  0774  3A80               	xorlw	128
   741  0775  00FF               	movwf	btemp+1
   742  0776  3080               	movlw	128
   743  0777  027F               	subwf	btemp+1,w
   744  0778  1D03               	skipz
   745  0779  2F7C               	goto	u15
   746  077A  3003               	movlw	3
   747  077B  0272               	subwf	Lights@i,w
   748  077C                     u15:
   749  077C  1C03               	skipc
   750  077D  2F7F               	goto	u11
   751  077E  2F80               	goto	u10
   752  077F                     u11:
   753  077F  2F5E               	goto	l693
   754  0780                     u10:
   755  0780                     l76:
   756                           
   757                           ;Code.c: 157:     START = 1;
   758  0780  01F5               	clrf	_START
   759  0781  0AF5               	incf	_START,f
   760  0782                     l77:
   761  0782  0008               	return
   762  0783                     __end_of_Lights:
   763  007E                     btemp	set	126	;btemp
   764  007E                     wtemp0	set	126
   765                           
   766                           	psect	config
   767                           
   768                           ;Config register CONFIG1 @ 0x2007
   769                           ;	Oscillator Selection bits
   770                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   771                           ;	Watchdog Timer Enable bit
   772                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   773                           ;	Power-up Timer Enable bit
   774                           ;	PWRTE = OFF, PWRT disabled
   775                           ;	RE3/MCLR pin function select bit
   776                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   777                           ;	Code Protection bit
   778                           ;	CP = OFF, Program memory code protection is disabled
   779                           ;	Data Code Protection bit
   780                           ;	CPD = OFF, Data memory code protection is disabled
   781                           ;	Brown Out Reset Selection bits
   782                           ;	BOREN = OFF, BOR disabled
   783                           ;	Internal External Switchover bit
   784                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   785                           ;	Fail-Safe Clock Monitor Enabled bit
   786                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   787                           ;	Low Voltage Programming Enable bit
   788                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   789                           ;	In-Circuit Debugger Mode bit
   790                           ;	DEBUG = 0x1, unprogrammed default
   791  2007                     	org	8199
   792  2007  20D6               	dw	8406
   793                           
   794                           ;Config register CONFIG2 @ 0x2008
   795                           ;	Brown-out Reset Selection bit
   796                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   797                           ;	Flash Program Memory Self Write Enable bits
   798                           ;	WRT = OFF, Write protection off
   799  2008                     	org	8200
   800  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Lights

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              4 COMMON     1     1      0
                             _Lights
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights                                               4     4      0      30
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lights
   _Setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jan 21 21:03:59 2021

                     l72 0753                       l76 0780                       l77 0782  
                     u10 0780                       u11 077F                       u20 078E  
                     u21 078D                       u30 0796                       u15 077C  
                     u31 0795                       u40 07A2                       u41 07A1  
                     u50 07A7                       u51 07A6                       u60 07AF  
                     u61 07AE                       u70 07B5                       u71 07B4  
                     u80 07BE                       u81 07BD                       u90 07CD  
                     u91 07CC                      l701 0783                      l711 0797  
                    l703 0788                      l721 07AF                      l713 079C  
                    l705 078E                      l731 07C2                      l723 07B0  
                    l715 07A2                      l707 0791                      l741 07D2  
                    l733 07C3                      l725 07B5                      l717 07A7  
                    l709 0796                      l671 074A                      l751 07E3  
                    l743 07D5                      l735 07C5                      l727 07B8  
                    l719 07AA                      l681 0758                      l673 074C  
                    l753 07E9                      l745 07DA                      l729 07BE  
                    l737 07C9                      l683 0759                      l675 074D  
                    l755 07ED                      l747 07DB                      l739 07CD  
                    l693 075E                      l685 075A                      l677 074E  
                    l669 073C                      l757 07EE                      l749 07E0  
                    l695 0767                      l687 075C                      l679 0754  
                    l759 07F0                      l697 076D                      l699 0773  
                    u100 07D2                      u101 07D1                      u110 07DA  
                    u111 07D9                      u120 07E0                      u121 07DF  
                    u130 07E9                      u131 07E8                      u147 0762  
                   _FLAG 0078                     _WPUB 0095                     _main 0783  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _FLAG1 0077                    _FLAG2 0076                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _START 0075  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _Setup 073C  
                  status 0003                    wtemp0 007E          __initialization 07F8  
           __end_of_main 07F8                   ??_main 0074                   ?_Setup 0070  
                 _ANSELH 0189                   _Lights 0754  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_Setup 0754                  ??_Setup 0070  
                ?_Lights 0070               __pmaintext 0783                  Lights@i 0072  
        __size_of_Lights 002F                  __ptext1 073C                  __ptext2 0754  
   end_of_initialization 07FC                _PORTBbits 0006           __end_of_Lights 0783  
    start_initialization 07F8                 ??_Lights 0070              __pbssCOMMON 0075  
              ___latbits 0002           __size_of_Setup 0018            __size_of_main 0075  
             _OPTION_REG 0081  
